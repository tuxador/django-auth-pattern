# Generated by Django 2.0.3 on 2018-03-08 23:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clinic', '0008_auto_20180309_0036'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ballon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marque', models.CharField(blank=True, max_length=25, null=True, verbose_name='modèle de ballon')),
                ('vendor', models.CharField(blank=True, max_length=25, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True, verbose_name='numéro de série')),
                ('ballon_compliant', models.BooleanField(default=True, verbose_name='Compliant')),
                ('calibre', models.DecimalField(decimal_places=2, default=3.0, max_digits=3)),
                ('longueur', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Complication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complication', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Coronarographie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention_date', models.DateField(verbose_name="date d'intervention")),
                ('emergency', models.BooleanField(default=False, verbose_name='urgence')),
                ('abord', models.CharField(choices=[('R', 'Radial'), ('F', 'Femoral'), ('O', 'Autre')], default='R', max_length=1, null=True, verbose_name='abord artériel')),
                ('iode', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Produit de contrast')),
                ('tcg', models.CharField(blank=True, max_length=255, null=True)),
                ('iva', models.CharField(blank=True, max_length=255, null=True, verbose_name='IVA')),
                ('bissectrice', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bissectrice')),
                ('circonflexe', models.CharField(blank=True, max_length=255, null=True, verbose_name='Circonflexe')),
                ('coronaire_dte', models.CharField(blank=True, max_length=255, null=True, verbose_name='Coronaire droite')),
                ('dominance', models.NullBooleanField(default=True)),
                ('conclusion', models.TextField(blank=True, null=True, verbose_name='Conclusion')),
                ('decision', models.CharField(blank=True, max_length=255, null=True, verbose_name='Décision thérapeutique')),
                ('staff_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du staff')),
                ('procedure', models.TextField(blank=True, null=True, verbose_name='Angioplastie')),
                ('success', models.BooleanField(default=True)),
                ('dispositions', models.CharField(blank=True, max_length=255, verbose_name='Dispositions complémentaires')),
                ('aide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_aide', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coroscan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coroscan_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du coroscanner')),
                ('referent', models.CharField(blank=True, max_length=50, null=True, verbose_name='Médecin référent')),
                ('medication', models.CharField(blank=True, max_length=255, null=True, verbose_name='traitement habituel')),
                ('motif', models.CharField(blank=True, choices=[('1', 'Douleur thoracique'), ('2', 'Dysfonction VG'), ('3', 'Pré op'), ('4', 'Contrôle de PAC'), ('5', "Test d'ischémie litigieux"), ('6', 'Contrôle de stent'), ('7', 'IMS')], max_length=1, null=True)),
                ('base_heart_rate', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FC base')),
                ('base_ecg', models.CharField(blank=True, max_length=255, null=True, verbose_name='ECG base')),
                ('quality', models.CharField(blank=True, max_length=255, null=True, verbose_name="Qualité de l'examen")),
                ('voltage', models.CharField(default='100Kv', max_length=10)),
                ('amperage', models.CharField(blank=True, max_length=10, null=True, verbose_name='Ampérage')),
                ('pas', models.CharField(default='0.35', max_length=10, verbose_name='PAS')),
                ('longueur_champ', models.CharField(default='16cm', max_length=10, verbose_name='Longueur champ')),
                ('ctdivol', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='CTDIvol')),
                ('dlp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='DLP mgy/cm')),
                ('tcg', models.CharField(blank=True, max_length=255, null=True, verbose_name='TCG')),
                ('iva', models.CharField(blank=True, max_length=255, null=True, verbose_name='IVA')),
                ('diag', models.CharField(blank=True, max_length=255, null=True, verbose_name='Diagonale')),
                ('bissec', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bissectrice')),
                ('cx', models.CharField(blank=True, max_length=255, null=True, verbose_name='Circonflexe')),
                ('mg', models.CharField(blank=True, max_length=255, null=True, verbose_name='Marginale')),
                ('cd', models.CharField(blank=True, max_length=255, null=True, verbose_name='Coronaire droite')),
                ('ivp', models.CharField(blank=True, max_length=255, null=True, verbose_name='IVP')),
                ('rvg', models.CharField(blank=True, max_length=255, null=True, verbose_name='RVG')),
                ('dominance', models.NullBooleanField(default=True, verbose_name='Dominance droite')),
                ('calcic_total', models.PositiveSmallIntegerField(default='0', verbose_name='score Calcique global')),
                ('calcic_tcg', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca TCG')),
                ('calcic_iva', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca IVA')),
                ('calcic_diag', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca Diag')),
                ('calcic_cx', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca Cx')),
                ('calcic_bissec', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca Bissectrice')),
                ('calcic_mg', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca Mg')),
                ('calcic_cd', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca CD')),
                ('calcic_ivp', models.PositiveSmallIntegerField(default='0', verbose_name='score Ca IVP')),
                ('cinetic_vg', models.TextField(blank=True, null=True, verbose_name='Cinétique VG')),
                ('fevg', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FeVG')),
                ('conclusion', models.TextField(blank=True, null=True, verbose_name='Conclusion')),
                ('medecin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Guidwire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marque', models.CharField(blank=True, max_length=25, null=True, verbose_name='marque du guide')),
                ('vendor', models.CharField(blank=True, max_length=25, null=True)),
                ('hydrophile', models.BooleanField(default=False, verbose_name='hydrophile')),
                ('calibre', models.DecimalField(decimal_places=3, default=0.035, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='Indication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indication', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Lesion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesion', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Pace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pace', models.CharField(max_length=25)),
                ('serial', models.CharField(blank=True, max_length=255, null=True, verbose_name='numéro de série')),
            ],
        ),
        migrations.CreateModel(
            name='Sonde',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sonde', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Stent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marque', models.CharField(blank=True, max_length=25, null=True, verbose_name='modèle de stent')),
                ('vendor', models.CharField(blank=True, max_length=25, null=True)),
                ('serial', models.CharField(blank=True, max_length=255, null=True, verbose_name='numéro de série')),
                ('stent_actif', models.BooleanField(default=True, verbose_name='Stent actif')),
                ('calibre', models.DecimalField(decimal_places=2, default=3.0, max_digits=3)),
                ('longueur', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stimulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention_date', models.DateField(verbose_name="date d'intervention")),
                ('emergency', models.BooleanField(default=False, verbose_name='urgence')),
                ('epuisement', models.BooleanField(default=False, verbose_name='changement de boîtier')),
                ('type_stimulation', models.CharField(blank=True, max_length=4, verbose_name='Type de stimulation')),
                ('procedure', models.TextField(verbose_name='procédure')),
                ('duree', models.DurationField(blank=True, null=True)),
                ('dispositions', models.CharField(blank=True, max_length=255, verbose_name='Dispositions complémentaires')),
                ('aide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_stimulation_aide', to=settings.AUTH_USER_MODEL)),
                ('complications', models.ManyToManyField(blank=True, to='cathlab.Complication')),
                ('indication', models.ManyToManyField(blank=True, to='cathlab.Indication')),
                ('operateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pacemaker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cathlab.Pace')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Patient')),
            ],
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='bissec',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_bissec', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='cd1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_cd1', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='cd2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_cd2', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='cd3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_cd3', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='complications',
            field=models.ManyToManyField(blank=True, to='cathlab.Complication'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='cx_dist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_cx_dist', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='cx_moy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_cx_moy', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='cx_prox',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_cx_prox', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='guide',
            field=models.ManyToManyField(blank=True, to='cathlab.Guidwire'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='indication',
            field=models.ManyToManyField(blank=True, to='cathlab.Indication'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='iva_dist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_iva_dist', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='iva_moy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_iva_moy', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='iva_prox',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_iva_prox', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='ivp',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_ivp', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='marginale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_marginale', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='operateur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Patient'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='rvg',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='intervention_coronarographie_rvg', to='cathlab.Lesion'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='sonde',
            field=models.ManyToManyField(blank=True, to='cathlab.Sonde'),
        ),
        migrations.AddField(
            model_name='coronarographie',
            name='stent',
            field=models.ManyToManyField(blank=True, to='cathlab.Stent'),
        ),
    ]
