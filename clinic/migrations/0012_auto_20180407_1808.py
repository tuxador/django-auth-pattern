# Generated by Django 2.0.3 on 2018-04-07 17:08

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('clinic', '0011_auto_20180403_2208'),
    ]

    operations = [
        migrations.CreateModel(
            name='FicheTechnique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_fiche', models.DateField(default=django.utils.timezone.now, verbose_name='Date de la fiche')),
                ('diagnostic', models.CharField(blank=True, max_length=255, verbose_name='Diagnostic exact')),
                ('pathologies_assoc', models.CharField(blank=True, max_length=255, verbose_name='Pathologies associées')),
                ('nyha', models.PositiveSmallIntegerField(default=1, verbose_name='Stade NYHA')),
                ('ecg', models.CharField(blank=True, max_length=255, verbose_name='ECG')),
                ('echocoeur', models.CharField(blank=True, max_length=255, verbose_name='Echocoeur (conclusion)')),
                ('telethorax', models.CharField(blank=True, max_length=255, verbose_name='Téléthorax')),
                ('fevg', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FEVG')),
                ('valvulopathy', models.CharField(blank=True, max_length=255, verbose_name='Atteinte valvulaire (grade)')),
                ('aorte', models.CharField(blank=True, max_length=255, verbose_name="État de l'aorte")),
                ('test_ischemie', models.CharField(blank=True, choices=[('E', "ECG d'effort"), ('S', 'stress-echo'), ('M', 'scintigraphie myocardique'), ('C', 'Coroscan'), ('R', 'IRM cardiaque')], max_length=1, verbose_name="Test d'ischémie")),
                ('result_test_ischemie', models.CharField(blank=True, max_length=255, verbose_name="Résultats du test d'ischémie")),
                ('coro', models.CharField(blank=True, max_length=255, verbose_name='état des coronaires (coronarographie)')),
                ('syntax', models.PositiveSmallIntegerField(null=True, verbose_name='SYNTAX score')),
                ('coroscan', models.CharField(blank=True, max_length=255, verbose_name='état des coronaires (coroscanner)')),
                ('periph', models.TextField(blank=True, verbose_name='état des artères périphériques (doppler ou angio)')),
                ('clearance_cr', models.PositiveSmallIntegerField(null=True, verbose_name='Fonction rénale (clearance)')),
                ('dfg', models.PositiveSmallIntegerField(null=True, verbose_name='Fonction rénale (Débit de filtration glomérulaire)')),
                ('respir', models.CharField(blank=True, max_length=255, verbose_name='fonction respiratoire')),
                ('dentaire', models.CharField(blank=True, max_length=255, verbose_name='État dentaire')),
                ('biology', models.TextField(blank=True, verbose_name='Biologie: principales anomalies')),
                ('traitement', models.TextField(blank=True, verbose_name='Traitement médical')),
                ('risk', models.TextField(blank=True, verbose_name='Évaluation du risque opératoire')),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='body_area',
            field=models.DecimalField(decimal_places=2, default=1.7, max_digits=3, verbose_name='surface corporelle'),
        ),
        migrations.AddField(
            model_name='patient',
            name='surgery_history',
            field=models.TextField(blank=True, verbose_name='antécédents de chirurgie cardique ou de geste interventionne'),
        ),
        migrations.AlterField(
            model_name='consultation',
            name='telethorax',
            field=models.CharField(blank=True, max_length=150, null=True),
        ),
        migrations.AddField(
            model_name='fichetechnique',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fiches_techniques', to='clinic.Patient'),
        ),
    ]
