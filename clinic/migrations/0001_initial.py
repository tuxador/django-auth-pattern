# Generated by Django 2.0.3 on 2018-03-07 18:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_date', models.DateField(verbose_name='date de consultation')),
                ('emergency', models.BooleanField(default=False, verbose_name='urgence')),
                ('fever', models.BooleanField(default=False, verbose_name='fièvre')),
                ('dyspnea_nyha', models.PositiveSmallIntegerField(default='1', verbose_name='stade NYHA')),
                ('angina_scc', models.PositiveSmallIntegerField(default='1', verbose_name="stade d'angor")),
                ('syncope', models.BooleanField(default=False, verbose_name='Syncope')),
                ('histoire', models.CharField(blank=True, max_length=255, null=True, verbose_name='Histoire de la maladie')),
                ('systolic_bp', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('diastolic_bp', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('heart_rate', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('auscultation', models.CharField(blank=True, max_length=50, null=True)),
                ('ivg', models.BooleanField(default=False)),
                ('ivd', models.BooleanField(default=False)),
                ('pulse', models.CharField(blank=True, max_length=50)),
                ('telethorax', models.CharField(blank=True, max_length=50, null=True)),
                ('rythm', models.CharField(choices=[('S', 'Sinusal'), ('F', 'Atrial Fibrillation'), ('R', 'Atrial Flutter'), ('P', 'Pace Maker'), ('T', 'TV')], max_length=1)),
                ('freq', models.PositiveSmallIntegerField(default='70')),
                ('bundle_block', models.CharField(blank=True, choices=[('D', 'BBD'), ('G', 'BBG')], max_length=1, null=True)),
                ('hypertrophy', models.NullBooleanField(default=False)),
                ('necrosis', models.CharField(choices=[('N', 'Null'), ('S', 'Septal'), ('A', 'Anterior'), ('L', 'Lateral'), ('P', 'Posterior')], max_length=1)),
                ('ischaemia', models.CharField(choices=[('N', 'Null'), ('S', 'Septal'), ('A', 'Anterior'), ('L', 'Lateral'), ('P', 'Posterior')], max_length=1)),
                ('lesion', models.CharField(choices=[('N', 'Null'), ('S', 'Septal'), ('A', 'Anterior'), ('L', 'Lateral'), ('P', 'Posterior')], max_length=1)),
                ('t_inversion', models.CharField(choices=[('N', 'Null'), ('S', 'Septal'), ('A', 'Anterior'), ('L', 'Lateral'), ('P', 'Posterior')], max_length=1)),
                ('corrected_qt', models.IntegerField(default=400)),
                ('echocoeur', models.TextField(blank=True, null=True, verbose_name='échocardiographie')),
                ('date_echo', models.DateField(default=django.utils.timezone.now, verbose_name="Date de l'écho")),
                ('eto', models.TextField(blank=True, null=True, verbose_name='échocardiographie trans-oesophagienne')),
                ('fevg', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FeVG')),
                ('resume', models.TextField(null=True, verbose_name='résumé clinique')),
                ('dispositions', models.CharField(blank=True, max_length=255, verbose_name='dispositions complémentaires')),
                ('ordonnance', models.TextField(blank=True, null=True, verbose_name='ordonnance')),
                ('medecin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Motif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif', models.CharField(max_length=25, verbose_name="motif d'admission")),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nom et prénoms')),
                ('slug', models.SlugField(max_length=100)),
                ('birth', models.DateField(verbose_name='date de naissance')),
                ('gender', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('O', 'autre')], max_length=1, verbose_name='sexe')),
                ('phone', models.CharField(default='0550123456', max_length=10, verbose_name='Téléphone')),
                ('profession', models.CharField(choices=[('F', 'fonctionnaire'), ('E', 'employé'), ('C', 'commerçant'), ('Y', 'femme au foyer'), ('T', 'étudiant'), ('D', 'cadre'), ('L', 'profession libérale'), ('O', 'au chômage')], max_length=1, verbose_name='Profession')),
                ('assurance', models.CharField(choices=[('N', 'CNAS'), ('S', 'CASNOS'), ('A', 'Autre'), ('O', 'Non assuré')], max_length=1, verbose_name='Assurance sociale')),
                ('correspondant', models.CharField(blank=True, max_length=255, verbose_name='Médecin correspondant')),
                ('first_consultation', models.DateField(default=django.utils.timezone.now, verbose_name='première consultation')),
                ('hypertension', models.BooleanField(default=True, verbose_name='hypertendu(e)')),
                ('diabete', models.BooleanField(default=True, verbose_name='diabétique')),
                ('dyslipidemia', models.BooleanField(default=True, verbose_name='dyslipidémie')),
                ('smoker', models.BooleanField(default=False, verbose_name='tabagique')),
                ('weight', models.PositiveSmallIntegerField(blank=True, verbose_name='poids')),
                ('lenght', models.DecimalField(decimal_places=2, default=1.7, max_digits=3, verbose_name='taille')),
                ('obesity', models.BooleanField(default=True, verbose_name='obèse')),
                ('sedentarity', models.BooleanField(default=True, verbose_name='sédentarité')),
                ('heredity', models.BooleanField(default=False, verbose_name='hérédité coronarienne')),
                ('history', models.TextField(verbose_name='antécedents')),
                ('allergy', models.CharField(blank=True, max_length=50, verbose_name='allergie connue')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Stress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stress_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date du stress-echo')),
                ('referent', models.CharField(blank=True, max_length=50, verbose_name='Médecin référent')),
                ('medication', models.CharField(blank=True, max_length=255, verbose_name='traitement habituel')),
                ('dobu_5', models.NullBooleanField(verbose_name='Dobu 5 gammas')),
                ('dobu_10', models.NullBooleanField(verbose_name='Dobu 10 gammas')),
                ('dobu_15', models.NullBooleanField(verbose_name='Dobu 15 gammas')),
                ('dobu_20', models.NullBooleanField(verbose_name='Dobu 20 gammas')),
                ('dobu_30', models.NullBooleanField(verbose_name='Dobu 30 gammas')),
                ('dobu_40', models.NullBooleanField(verbose_name='Dobu 40 gammas')),
                ('atropin_1', models.NullBooleanField(verbose_name='Atropine 0.25 mg')),
                ('atropin_2', models.NullBooleanField(verbose_name='Atropine 0.50 mg')),
                ('atropin_3', models.NullBooleanField(verbose_name='Atropine 0.75 mg')),
                ('atropin_4', models.NullBooleanField(verbose_name='Atropine 1.00 mg')),
                ('bb_peros', models.NullBooleanField(verbose_name='Beta bloqueur per os')),
                ('bb_iv', models.NullBooleanField(verbose_name='Beta bloqueur IV')),
                ('nitrin', models.NullBooleanField(verbose_name='Dérivés nitrés')),
                ('objectif', models.CharField(choices=[('I', 'Ischémie'), ('V', 'Viabilité'), ('R', 'Réserve contractile'), ('G', 'Gradient trans-aortique'), ('M', 'Fuite mitrale')], max_length=1)),
                ('base_systolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAS base')),
                ('base_diastolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAD base')),
                ('base_heart_rate', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FC base')),
                ('base_ecg', models.CharField(blank=True, max_length=255, null=True, verbose_name='ECG base')),
                ('base_echo', models.CharField(blank=True, max_length=255, null=True, verbose_name='écho de base')),
                ('low_symptoma', models.CharField(blank=True, max_length=255, null=True, verbose_name='Symptômes low dose')),
                ('low_systolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAS low dose')),
                ('low_diastolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAD low dose')),
                ('low_heart_rate', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FC low dose')),
                ('low_ecg', models.CharField(blank=True, max_length=255, null=True, verbose_name='ECG low dose')),
                ('low_echo', models.CharField(blank=True, max_length=255, null=True, verbose_name='écho low dose')),
                ('peak_symptoma', models.CharField(blank=True, max_length=255, null=True, verbose_name='Symptômes peak dose')),
                ('peak_systolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAS peak dose')),
                ('peak_diastolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAD peak dose')),
                ('peak_heart_rate', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FC peak dose')),
                ('peak_ecg', models.CharField(blank=True, max_length=255, null=True, verbose_name='ECG peak dose')),
                ('peak_echo', models.CharField(blank=True, max_length=255, null=True, verbose_name='écho peak dose')),
                ('recup_symptoma', models.CharField(blank=True, max_length=255, null=True, verbose_name='Symptômes récupération')),
                ('recup_systolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAS récupération')),
                ('recup_diastolic_bp', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='PAD récupération')),
                ('recup_heart_rate', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='FC récupération')),
                ('recup_ecg', models.CharField(blank=True, max_length=255, null=True, verbose_name='ECG récupération')),
                ('recup_echo', models.CharField(blank=True, max_length=255, null=True, verbose_name='écho de récupération')),
                ('maximale', models.BooleanField(default=True, verbose_name='épreuve maximale')),
                ('conclusion', models.TextField(blank=True, verbose_name='Conclusion')),
                ('disposition', models.CharField(choices=[('M', 'Traitement médical'), ('C', 'Coronarographie diagnostique'), ('R', 'Coronarographie et éventuel geste de revascularisation'), ('N', 'Non concluante')], default='M', max_length=1, verbose_name='Dispositions complémentaires')),
                ('medecin', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('motif_stress', models.ManyToManyField(to='clinic.Motif')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Wilaya',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wilaya', models.CharField(max_length=25)),
                ('code', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='adresse',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.Wilaya'),
        ),
        migrations.AddField(
            model_name='patient',
            name='tags',
            field=models.ManyToManyField(default='cardio', to='clinic.Tag'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='motif_consultation',
            field=models.ManyToManyField(to='clinic.Motif'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consults', to='clinic.Patient'),
        ),
    ]
